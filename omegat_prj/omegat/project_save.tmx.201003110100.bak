<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header
    creationtool="OmegaT"
    creationtoolversion="2.0.5"
    segtype="sentence"
    o-tmf="OmegaT TMX"
    adminlang="EN-US"
    srclang="EN-US"
    datatype="plaintext"
  >
  </header>
  <body>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 NAME</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head1 NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 DESCRIPTION</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head1 DESCRIPCIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=over 4</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=over 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print OUT;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print OUT;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ES">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>close OUT;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>close OUT;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To suppress this warning, say</seg>
      </tuv>
      <tuv lang="ES">
        <seg>To suppress this warning, say</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>qw!</seg>
      </tuv>
      <tuv lang="ES">
        <seg>qw!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a, b, c !;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>a, b, c !;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a b c !;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>a b c !;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($x &amp; $y == 0) { ...</seg>
      </tuv>
      <tuv lang="ES">
        <seg>if ($x &amp; $y == 0) { ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{</seg>
      </tuv>
      <tuv lang="ES">
        <seg>{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="ES">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0 : 1&gt;.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>0 : 1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=back</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=back</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlintro -- a brief introduction and overview of Perl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>perlintro -- breve introducción y descripción general de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document is intended to give you a quick overview of the Perl
programming language, along with pointers to further documentation.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Este documento proprociona una introducción rápida al lenguaje de programación Perl, además de referencias a documentación adicional.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It
is intended as a &quot;bootstrap&quot; guide for those who are new to the
language, and provides just enough information for you to be able to
read other peoples' Perl and understand roughly what it's doing, or
write your own simple scripts.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>It
is intended as a &quot;bootstrap&quot; guide para los nuevos usuarios del lenguaje, y proporciona la información necesaria para poder leer el código Perl
de otras personas y comprender su funcionamiento aproximado, o 
para escribir scripts sencillos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can read that documentation using the C&lt;perldoc&gt;
command or whatever method you're using to read this document.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Puede leer la documentación mediante el comando C&lt;perldoc&gt;
o cualquier otro método que use para leer este documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is Perl?</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 ¿Qué es Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is a general-purpose programming language originally developed for
text manipulation and now used for a wide range of tasks including
system administration, web development, network programming, GUI
development, and more.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Perl es un lenguaje de programación de propósito general desarrollado originalmente para
la manipulación de texto y que, en la actualidad, se usa para una amplia gama de tareas,
como administración de sistemas, desarrollo web, programación de network, 
desarrollo de interfaces gráficas de usuario, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Running Perl programs</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Ejecutar programas Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run a Perl program from the Unix command line:</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Para ejecutar un Perl desde la línea de comandos de Unix:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl progname.pl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>perl nombre_programa.pl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!/usr/bin/env perl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>#!/usr/bin/env perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, including instructions for other platforms such as
Windows and Mac OS, read L&lt;perlrun&gt;.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Para obtener más información, así como instrucciones para otras
plataformas como Windows y Mac OS, lea L&lt;perlrun&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!/usr/bin/perl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>#!/usr/bin/perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use strict;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>use strict;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use warnings;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>use warnings;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Basic syntax overview</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Descripción general de la sintaxis básica</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Perl script or program consists of one or more statements.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Un script o programa Perl consta de una o varias instrucciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comments start with a hash symbol and run to the end of the line</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Los comentarios comienzan con un símbolo hash y van hasta el final de la línea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># This is a comment</seg>
      </tuv>
      <tuv lang="ES">
        <seg># Esto es un comentario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print 42;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print 42;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Scalars</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Escalares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More complex data types can be constructed using references, which allow
you to build lists and hashes within lists and hashes.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Se pueden crear tipos de datos más complejos mediante referencias, que permiten generar listas y hashes dentro de listas y hashes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A reference is a scalar value and can refer to any other Perl data
type.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Una referencia es un valor escalar y puede apuntar a cualquier otro tipos de datos de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $variables = {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $variables = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scalar  =&gt;  {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>scalar  =&gt;  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sigil =&gt; '$',</seg>
      </tuv>
      <tuv lang="ES">
        <seg>sigil =&gt; '$',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>},</seg>
      </tuv>
      <tuv lang="ES">
        <seg>},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>array   =&gt;  {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>array   =&gt;  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sigil =&gt; '@',</seg>
      </tuv>
      <tuv lang="ES">
        <seg>sigil =&gt; '@',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hash    =&gt;  {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>hash    =&gt;  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Variable scoping</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Ámbito de variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $var = &quot;value&quot;;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $var = &quot;valor&quot;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$var = &quot;value&quot;;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$var = &quot;valor&quot;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $x = &quot;foo&quot;;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $x = &quot;foo&quot;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using C&lt;strict&gt; is highly recommended.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Es muy recomendable usar C&lt;strict&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section on modules, below, for more
information about modules and CPAN).</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Consulte la sección sobre los módulos a continuación para obtener más información acerca de los módulos y CPAN).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The conditions can be any Perl expression.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Las condiciones pueden ser cualquier expresión Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item if</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item if</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># the traditional way</seg>
      </tuv>
      <tuv lang="ES">
        <seg># la manera tradicional</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($zippy) {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>if ($zippy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item while</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item while</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print &quot;LA LA LA\n&quot; while 1;          # loops forever</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print &quot;LA LA LA\n&quot; while 1;          # bucle sin fin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item for</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item for</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exactly like C:</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Exactamente igual que en C:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for ($i = 0; $i &lt;= $max; $i++) {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>for ($i = 0; $i &lt;= $max; $i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>==  equality</seg>
      </tuv>
      <tuv lang="ES">
        <seg>==  igualdad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>!=  inequality</seg>
      </tuv>
      <tuv lang="ES">
        <seg>!=  desigualdad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;   less than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&lt;   menor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt;   greater than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&gt;   mayor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;=  less than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&lt;=  menor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt;=  greater than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&gt;=  mayor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item String comparison</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Comparación de cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eq  equality</seg>
      </tuv>
      <tuv lang="ES">
        <seg>eq  igualdad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ne  inequality</seg>
      </tuv>
      <tuv lang="ES">
        <seg>ne  desigualdad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lt  less than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>lt  menor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gt  greater than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>gt  mayor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>le  less than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>le  menor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ge  greater than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>ge  mayor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because we don't
have special variable types, and Perl needs to know whether to sort
numerically (where 99 is less than 100) or alphabetically (where 100 comes
before 99).</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Because we don't
have special variable types, and Perl needs to know whether to sort
numerically (where 99 is less than 100) or alphabetically (where 100 comes
before 99).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Boolean logic</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Lógica Booleana</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>!</seg>
      </tuv>
      <tuv lang="ES">
        <seg>!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=   assignment</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=   asignación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>string concatenation</seg>
      </tuv>
      <tuv lang="ES">
        <seg>concatenación de cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x   string multiplication</seg>
      </tuv>
      <tuv lang="ES">
        <seg>x   multiplicación de cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>..</seg>
      </tuv>
      <tuv lang="ES">
        <seg>..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a += 1;        # same as $a = $a + 1</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$a += 1;        # igual que $a = $a + 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a -= 1;        # same as $a = $a - 1</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$a -= 1;        # igual que $a = $a - 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a .= &quot;\n&quot;;     # same as $a = $a .</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$a .= &quot;\n&quot;;     # igual que $a = $a .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;\n&quot;;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&quot;\n&quot;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $out $record;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print $out $record;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $log $logmessage;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print $log $logmessage;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Regular expressions</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a single character</seg>
      </tuv>
      <tuv lang="ES">
        <seg>un solo carácter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (&lt;&gt;) {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>while (&lt;&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>next if /^$/;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>next if /^$/;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Other regexp features</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Otras características de las expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Writing subroutines</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Escribir subrutinas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub logger {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>sub logger {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $logmessage = shift;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $logmessage = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $logfile $logmessage;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print $logfile $logmessage;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subroutines can also return values:</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Las subrutinas también pueden devolver valores:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub square {</seg>
      </tuv>
      <tuv lang="ES">
        <seg>sub square {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $num = shift;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $num = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $result = $num * $num;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $result = $num * $num;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $result;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>return $result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$sq = square(8);</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$sq = square(8);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 OO Perl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Perl orientado a objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A categorized list of modules is
also available from CPAN.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>En CPAN también está disponible una lista de módulos
clasificados por categorías.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlmod&gt; describes Perl modules in general.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>L&lt;perlmod&gt; describe los módulos de Perl en general.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlmodlib&gt; lists the
modules which came with your Perl installation.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>L&lt;perlmodlib&gt; muestra los módulos
incluidos en la instalación de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kirrily &quot;Skud&quot; Robert &lt;skud@cpan.org&gt;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Kirrily &quot;Skud&quot; Robert &lt;skud@cpan.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package POD2::ES;</seg>
      </tuv>
      <tuv lang="ES">
        <seg>package POD2::ES;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document is intended to give you a quick overview of the Perl
programming language, along with pointers to further documentation.  It
is intended as a &quot;bootstrap&quot; guide for those who are new to the
language, and provides just enough information for you to be able to
read other peoples' Perl and understand roughly what it's doing, or
write your own simple scripts.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>This document is intended to give you a quick overview of the Perl
programming language, along with pointers to further documentation.  It
is intended as a &quot;bootstrap&quot; guide for those who are new to the
language, and provides just enough information for you to be able to
read other peoples' Perl and understand roughly what it's doing, or
write your own simple scripts.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use parentheses for functions' arguments or omit them
according to your personal taste.  They are only required
occasionally to clarify issues of precedence.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>You can use parentheses for functions' arguments or omit them
according to your personal taste.  They are only required
occasionally to clarify issues of precedence.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scalar values can be strings, integers or floating point numbers, and Perl
will automatically convert between them as required.  There is no need
to pre-declare your variable types, but you have to declare them using
the C&lt;my&gt; keyword the first time you use them. (This is one of the
requirements of C&lt;use strict;&gt;.)</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Scalar values can be strings, integers or floating point numbers, and Perl
will automatically convert between them as required.  There is no need
to pre-declare your variable types, but you have to declare them using
the C&lt;my&gt; keyword the first time you use them. (This is one of the
requirements of C&lt;use strict;&gt;.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can read from an open filehandle using the C&lt;&lt; &lt;&gt; &gt;&gt; operator.  In
scalar context it reads a single line from the filehandle, and in list
context it reads the whole file in, assigning each line to an element of
the list:</seg>
      </tuv>
      <tuv lang="ES">
        <seg>You can read from an open filehandle using the C&lt;&lt; &lt;&gt; &gt;&gt; operator.  In
scalar context it reads a single line from the filehandle, and in list
context it reads the whole file in, assigning each line to an element of
the list:</seg>
      </tuv>
    </tu>
  </body>
</tmx>
