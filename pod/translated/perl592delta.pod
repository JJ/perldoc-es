=head1 NOMBRE

perl592delta - qué hay de nuevo para perl v5.9.2

=head1 DESCRIPCIÓN

Este documento describe las diferencias entre las versiones de desarrollo 5.9.1 y la 5.9.2. Vea L<perl590delta> y L<perl591delta> para las diferencias entre 5.8.0 y 5.9.1.

=head1 Cambios incompatibles

=head2 Cadenas UTF-8 y empaquetamiento

La semántica de pack() y unpack() en relación con datos codificados en UTF-8, ha cambiado. El procesamiento es ahora, por defecto, de carácter en carácter, en lugar de byte por byte siguiendo la codificación subyacente. En particular, el código que utiliza cosas como C<pack("a*", $cadena)> para mirar a través de la codificación de la $cadena, ahora, simplemente, devuelve la $cadena original. Las cadenas empaquetadas pueden también ser actualizadas durante el procesado, cuando almacene caracteres actualizados. Puede obtener el comportamiento anterior mediante el uso de C<use bytes>.

Para ser consistente con pack(), C<C0> en las plantillas de unpack(), indica que los datos se procesan en modo de caracteres, es decir, carácter por carácter; por el contrario, C<U0> en unpack() indica modo UTF-8, donde la cadena empaquetada se procesa en su formato codificado en Unicode UTF-8, de byte en byte. Esto es justo lo contrario a como se hacía en perl 5.8.X.

Además, C<C0> y C<U0> también se pueden utilizar en plantillas pack() para especificar, respectivamente, modo carácter y modo bytes.

Ahora, C<C0> y C<U0> en medio de un formato de empaquetado o desempaquetado, cambia al modo de codificación especificada, respetando la agrupación hecha por los paréntesis. Anteriormente, los paréntesis eran ignorados.

Además, hay un nuevo formato pack() de caracteres, C<W>, que está destinado a sustituir al antiguo C<C>. C<C> se mantiene para los caracteres sin signo codificados en forma de bytes en la representación interna de las cadenas. C<W> representa valores de caracteres sin signo (lógicos), que puede ser mayores de 255. Es por eso más robusto, cuando manejamos datos potencialmente codificados en UTF-8 (ya que C<C> ajusta los valores que estén fueran del rango 0..255, y no respecta la codificación de la cadena).

En la práctica, eso significa que los formatos de pack son ahora neutrales con respecto a la codificación, a excepción de C<C>.

Por razones de coherencia, ahora C<A> en un formato unpack() quita todos los espacios en blanco Unicode del final de la cadena. Antes de perl 5.9.2, se utilizaba para quitar sólo los clásicos caracteres espacio del ASCII.

=head2 Varios

La salida del comando interno dump se ha mejorado, de modo que los caracteres no imprimibles, como el nueva línea y la tecla de retroceso se emiten en notación C<\x>, en lugar de octal.

La opción B<-C> no puede ser utilizada en la línea C<#!>. De todas maneras, tampoco funcionaba.

=head1 Mejoras principales

=head2 Envolviendo a Malloc

Perl ahora pueden ser compilado para que detecte los intentos de reservar bloques patológicamente grandes de memoria.  Previamente, tales asignaciones podrían verse afectados por la pasada de vuelta de los enteros en los cálculos del tamaño, que causa una mala distribución, que provocaría una caída de perl, y teóricamente podrían ser utilizados para realizar ataques de "ruptura de pila".  La envoltura por defecto está activa en plataformas en las que sabemos que funciona (la mayoría de las configuraciones de AIX, BSDi, Darwin, DEC OSF/1, FreeBSD, HP-UX, GNU Linux, OpenBSD, Solaris, VMS y la mayor parte de los compiladores Win32) y por defecto queda desactivado en otras plataformas.

=head2 Unicode Character Database 4.0.1

La copia de la base de datos de caracteres Unicode incluidos en Perl 5.9 ha sido actualizada desde la 4.0.0 a la 4.0.1.

=head2 suidperl menos inseguro

Paul Szabo ha analizado y parcheado C<suidperl> para eliminar los inseguridades conocidas en este momento. Actualmente no hay ningún agujero conocido en C<suidperl>, pero la experiencia anterior muestra que no podemos estar seguros de que estos fueron los últimos. Es posible que ya no invoque a perl con el uid activado, directamente, así que para mantener la compatibilidad anterior con I<scripts> que llaman a #!/usr/bin/suidperl, el único binario con uid activado es ahora C<sperl5.9.>I<n> (C<sperl5.9.2> para esta versión). C<suidperl> es instalado como un enlace duro a C<perl>; tanto C<suidperl> como C<perl> invocarán al binario C<sperl5.9.2> automáticamente, por lo que este cambio debería ser completamente transparente.

Para nuevos proyectos el equipo básico de desarrollo perl recomienda, encarecidamente, que utilice herramientas específicas para el propósito de seguridad, tales como C<sudo>, en lugar de C<suidperl>.

=head2 PERLIO_DEBUG

La variable de entorno C<PERLIO_DEBUG> ya no tiene ningún efecto para los scripts setuid, ni para los scripts ejecutados con B<-T>.

Además, con un perl con soporte de hilos de ejecución, usar C<PERLIO_DEBUG> podría provocar un desbordamiento de un búfer interno. Esto ha sido corregido.

=head2 Formatos

Además de las correcciones de errores, las características de C<format> han sido mejoradas. Vea L<perlform>.

=head2 Clases carácter Unicode

El motor de expresiones regulares de Perl ahora tiene soporte para coincidir en la intersección de dos clases de caracteres Unicode. También puede referirse a una clase carácter definida por el usuario, desde el interior de otra clase carácter definida por el usuario.

=head2 Modificadores de orden de bytes, para pack() y unpack()

Hay dos nuevos modificadores de orden de bytes, C<E<gt>> (I<big-endian>) y C<E<lt>> (I<little-endian>), que se pueden añadir a la mayoría de plantillas de caracteres y grupos de pack() y unpack() para forzar a un cierto orden de bytes para ese tipo o grupo.
Vea L<perlfunc/pack> y L<perlpacktut> para más detalles.

=head2 Contador de bytes en pack()

Un nuevo carácter de plantilla para pack(), C<".">, devuelve el número de caracteres leídos hasta ahora.

=head2 Nuevas variables

Una nueva variable, ${^RE_DEBUG_FLAGS}, controla qué banderas de depuración están en vigor para el motor de expresiones regulares cuando se ejecuta bajo C<use re "debug">. Vea L<re> para más detalles.

Una nueva variable ${^UTF8LOCALE} indica que fue detectada una localización UTF-8 por perl, en el arranque.

=head1 Módulos y Pragmata

=head2 Nuevos módulos

=over 4

=item *

C<encoding::warnings>, de Audrey Tang, es un módulo para emitir avisos cada vez que una cadena de caracteres ASCII que, conteniendo bytes con los bits altos puestos, se convierte implícitamente en UTF-8.

=item *

C<Module::CoreList>, de Richard Clamp, es un práctico y pequeño módulo que te dice qué versiones de módulos básicos se incluyen con cualquier versión de Perl 5. Viene con una interfaz de línea de comandos, C<corelist>.

=back

=head2 Módulos y I<pragmas> actualizados y mejorados

Módulos con una doble vida han sido actualizados para estar al día con respecto a sus versiones correspondientes en CPAN.

Los módulos con doble vida que contengan un C<_> en su número de versión son, realmente, I<más modernos> que su correspondiente versión en CPAN.

=over 4

=item B::Concise

C<B::Concise> se ha mejorado significativamente.

=item Socket

Hay un soporte experimental para los sockets abstractos del dominio Unix en Linux.

=item Sys::Syslog

C<syslog()> ahora puede utilizar constantes numéricas para los nombres de las facilidades y las prioridades, además de cadenas normales.

=item threads

I<Threads> desligados son ahora también compatibles con Windows.

=back

=head1 Cambios en las herramientas

=over 4

=item *

La utilidad C<corelist> es ahora instalada con perl (vea L</"Nuevos módulos"> más arriba).

=item *

C<h2ph> y C<h2xs> se han hecho un poco más robustos con respecto al código C "moderno".

=item *

Varios errores han sifo fijados en C<find2perl>, con respecto a C<-exec> y C<-eval>. También han sido añadidas las opciones C<-path>, C<-ipath> e C<-iname>.

=item *

El depurador Perl ahora puede salvar todos los comandos del depurador, para ser listados más tarde: notablemente, puede emular el ir hacia atrás, reiniciando y reejecutando todo hasta el último comando en el histórico de comandos almacenado.

También puede mostrar el árbol de herencia de los padres de una clase dada.

Perl tiene una nueva bandera de línea de comandos llamada -dt, que activa el soporte de hebras en el depurador.

=back

=head1 Mejoras en el rendimiento

=over 4

=item *

Asignaciones Unicode de tamaños de caja (C</i>, C<lc>, C<uc>, etc) son más rápidos.

=item *

C<@a = sort @a> se ha optimizado para hacer la ordenación en el mismo lugar. Del mismo modo, C<reverse sort ...> se ha optimizado para ordenar en sentido inverso, evitando la generación de una lista intermedia temporal.

=item *

Tareas innecesarias se han optimizado enormemente, como en

  my $s = undef;
  my @a = ();
  my %h = ();

=item *

C<map> en contexto escalar se ha optimizado.

=item *

El motor de expresiones regulares ahora implementa la optimización I<trie>: es capaz de factorizar prefijos y sufijos comunes en las expresiones regulares. Una nueva variable, ${^RE_TRIE_MAXBUF}, ha sido añadida, para ajustar esta optimización.

=back

=head1 Mejoras en la instalación y configuración

La personalización en tiempo de ejecución de @INC ahora puede ser activada pasando la opción C<-Dusesitecustomize> a configure. Cuando está activada, hará que perl ejecute F<$sitelibexp/sitecustomize.pl> antes que cualquier otra cosa.  Este script puede, entonces, ajustarse para que añada entradas adicionales a @INC.

Hay un apoyo alfa para entradas @INC reubicables.

Perl debería compilarse en Interix y en GNU/kFreeBSD.

=head1 Arreglo de determinados errores

La mayor parte de estos errores fueron reportados en la pista de mantenimiento de perl 5.8.x.
Sobre todo, un buen número de errores utf8 fueron fijados, y varias fugas de memoria fueron suprimidas. Las páginas de manual perl58Xdelta tienen más detalles sobre ellas.

Los arreglos de fallos, solo en la parte de desarrollo, incluyen:

C<$Foo::_> fue erróneamente forzado a ser C<$main::_>.

=head1 Diagnósticos nuevos y cambiados

Una nueva advertencia, C<!=~ should be !~>, es emitida para avisar de un fallo de escritura de un operador de no-coincidencia.

La advertencia I<Newline in left-justified string> ha sido eliminada.

El error I<Too late for "-T" option> ha sido reformulado para ser más descriptivo.

Hay un nuevo error de compilación, I<Illegal declaration of subroutine>, para un oscuro caso de error de sintaxis.

La salida de diagnóstico de Carp se ha cambiado un poco, para agregar un espacio después de la coma entre los argumentos. Esto hace que sea mucho más fácil para las herramientas como los navegadores web para ajustar la presentación, pero podría confundir a cualquier herramienta automática que llevase a cabo un análisis detallado de la salida de Carp.

C<perl -V> tiene varias mejoras, por lo que es más utilizable desde scripts de I<shell> para obtener el valor de las variables de configuración. Vea L<perlrun> para más detalles.

=head1 Cambios internos

El núcleo de perl ha sido refactorizado y reorganizado en diversos lugares.
En resumen, esta versión no será compatible a nivel binario con cualquier otra versión anterior de Perl.

=head1 Problemas conocidos

Para compilaciones con soporte de hilos, se ha informado que F<ext/threads/shared/t/wait.t> falla en algunos test, en HP-UX 10.20.

Net::Ping podría fallar en algunos test en HP-UX 11.00 con la última actualización del OS.

F<t/io/dup.t>, F<t/io/open.t> y F<lib/ExtUtils/t/Constant.t> fallan en algunos test, en algunos sabores BSD.

=head1 Planes para la siguiente versión

El plan actual para perl 5.9.3 es añadir CPANPLUS como módulo básico.
También se está trabajando en más optimizaciones de las expresiones regulares.

Se tiene previsto lanzar una versión de desarrollo de perl con más frecuencia, es decir, en cada momento en que algo importante cambie.

=head1 Informar de errores

Si encuentra algo que piensa que es un error, podría verificar los artículos publicados recientemente en el grupo de noticias comp.lang.perl.misc y la base de datos de errores de perl en http://bugs.perl.org/ . Hay también información en la página principal de Perl, http://www.perl.org/ .

Si usted cree que tiene un error no declarado, por favor, ejecute el programa B<perlbug> incluido en su distribución.  Asegúrese de reducir la aparición del error en un programa que sea pequeño, pero suficiente.  Su informe de error, junto con la salida de C<perl -V>, serán enviados a perlbug@perl.org para ser analizado por el equipo de adaptación de Perl.

=head1 VEA TAMBIÉN

El archivo de F<Changes> (Cambios) para obtener más información exhaustiva sobre lo que ha cambiado.

El archivo F<INSTALL> (INSTALAR) de cómo construir Perl.

El archivo F<README> (LEEME) para asuntos generales.

Los archivos F<Artistic> y F<Copying> para ver la información sobre derechos de autor.

=cut
