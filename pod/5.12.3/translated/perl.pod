=head1 NOMBRE

perl - El intérprete del lenguaje Perl

=head1 SINOPSIS

B<perl>	S<[ B<-sTtuUWX> ]>
	S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
	S<[ B<-cw> ] [ B<-d>[B<t>][:I<debugger>] ] [ B<-D>[I<número/lista>] ]>
	S<[ B<-pna> ] [ B<-F>I<patrón> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal/hexadecimal>] ]>
	S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<módulo> ] [ B<-M>[B<->]I<'módulo...'> ] [ B<-f> ]>
	S<[ B<-C [I<número/lista>] >]>
	S<[ B<-S> ]>
	S<[ B<-x>[I<dir>] ]>
	S<[ B<-i>[I<extensión>] ]>
	S<[ [B<-e>|B<-E>] I<'comando'> ] [ B<--> ] [ I<programa> ] [ I<argumento> ]...>

=head1 OBTENIENDO AYUDA

El programa F<perldoc> le da acceso a toda la documentación que viene con Perl.  Puede obtener más documentación, seminarios y soporte desde la comunidad en línea en L<http://www.perl.org/>.

Si es nuevo en Perl, debe empezar ejecutando C<perldoc perlintro>,
que es una introducción general para novatos y ofrece una base suficiente para navegar por el resto de la extensa documentación de Perl.  Ejecute C<perldoc perldoc> para aprender más cosas que puede hacer con F<perldoc>.

Para facilitar el acceso, el manual de perl se ha dividido en varias secciones.

=head2 General

    perl		Perl información general (esta sección)
    perlintro		Perl introducción para principiantes
    perltoc		Perl documentación: tabla de contenidos

=head2 Seminarios

    perlreftut		Perl references short introduction
    perldsc		Introducción a las estructuras de datos
    perllol		Estructuras de datos: arrays de arrays

    perlrequick 	Arranque rápido sobre las expresiones regulares
    perlretut		Seminario sobre las expresiones regulares

    perlboot		Seminario de POO Perl para novatos
    perltoot		Seminario de POO Perl, parte 1
    perltooc		Seminario de POO Perl, parte 2
    perlbot		Trucos y ejemplos de POO Perl

    perlperf		Técnicas de rendimiento y optimización

    perlstyle		Guía de estilo Perl

    perlcheat		Chuleta Perl
    perltrap		Trampas para los incautos
    perldebtut		Seminario de depuración

    perlfaq		Cuestiones frecuentes sobre Perl
      perlfaq1		Cuestiones generales sobre Perl
      perlfaq2		Obteniendo y aprendiendo sobre Perl
      perlfaq3		Herramientas de programación
      perlfaq4		Manipulación de datos
      perlfaq5		Archivos y formatos
      perlfaq6		Expresiones regulares
      perlfaq7		Cuestiones sobre el lenguaje
      perlfaq8		Interacción con el sistema
      perlfaq9		Redes

=head2 Manual de referencia

    perlsyn		Sintaxis Perl
    perldata		Estructuras de datos Perl
    perlop		Operadores y precedencia
    perlsub		Subrutinas
    perlfunc		Funciones incorporadas (primitivas)
      perlopentut	Seminario sobre open()
      perlpacktut	Seminario sobre pack() y unpack()
    perlpod		Documentación en texto llano
    perlpodspec 	Especificación de la documentación en texto llano
    perlrun		Ejecución y opciones
    perldiag		Mensajes de diagnóstico
    perllexwarn 	Avisos y su control
    perldebug		Depurando Perl
    perlvar		Variables predefinidas
    perlre		Expresiones regulares, el resto de la historia
    perlrebackslash	Expresiones regulares, las contrabarras
    perlrecharclass	Expresiones regulares, las clases carácter
    perlreref		Referencia rápida de las expresiones regulares
    perlref		Referencias, el resto de la historia
    perlform		Formatos Perl
    perlobj		Objetos Perl
    perltie		Objetos Perl detrás de variables sencillas
      perldbmfilter	Filtros DBM

    perlipc		Comunicación interprocesos
    perlfork		Información sobre fork()
    perlnumber		Semántica de los números en Perl

    perlthrtut		Seminario de ejecución por hilos

    perlport		Guía de portabilidad
    perllocale		Soporte de localización
    perluniintro	Introducción a Unicode
    perlunicode 	Soporte Unicode
    perlunifaq		Unicode FAQ
    perluniprops	Índice de las propiedades de Unicode versión 5.2.0 en Perl
    perlunitut		Seminario Unicode en Perl
    perlebcdic		Consideraciones para ejecutar Perl en plataformas EBCDIC

    perlsec		Seguridad

    perlmod		Módulos Perl: cómo funcionan
    perlmodlib		Módulos Perl: cómo escribir y usar
    perlmodstyle	Módulos Perl: cómo escribir módulos con estilo
    perlmodinstall	Módulos Perl: cómo instalar desde CPAN
    perlnewmod		Módulos Perl: preparando un nuevo módulo para su distribución
    perlpragma		Módulos Perl: escribiendo un pragma

    perlutil		utilidades empaquetadas con la distribución Perl

    perlcompile	Introducción al sistema de compilación Perl

    perlfilter		Filtros de código fuente

    perlglossary	Glosario Perl

=head2 Interiores e interfaz con el lenguaje C

    perlembed		Formas de embeber perl en su aplicación C o C++
    perldebguts 	Depurando, tripas y trucos
    perlxstut		Seminario sobre XS
    perlxs		Interfaz de programación de aplicaciones XS
    perlclib		Reemplazos internos para las funciones de la biblioteca estándar C
    perlguts		Funciones internas para los que hacen extensiones
    perlcall		Convenciones de llamadas desde C
    perlmroapi		Interfaz de complementos: resolución de métodos
    perlreapi		Interfaz de complementos: expresiones regulares
    perlreguts		Interiores del motor de expresiones regulares

    perlapi		Listado de la API (autogenerada)
    perlintern		Funciones internas de Perl (autogenerada)
    perliol		API C para la implementación Perl de las capas IO
    perlapio		Interfaz de la abstracción interna IO

    perlhack		Guía para hackers
    perlpolicy		Políticas de desarrollo
    perlrepository	Repositorio fuente

=head2 Varios

    perlbook		Información bibliográfica
    perlcommunity	Información sobre la comunidad Perl
    perltodo		Cosas por hacer

    perldoc		Mostrar documentación Perl en formato POD

    perlhist		Registros históricos
    perldelta		Cambios desde la versión anterior
    perl5122delta	Cambios en la versión 5.12.2
    perl5121delta	Cambios en la versión 5.12.1
    perl5120delta	Cambios en la versión 5.12.0
    perl5115delta	Cambios en la versión 5.11.5
    perl5114delta	Cambios en la versión 5.11.4
    perl5113delta	Cambios en la versión 5.11.3
    perl5112delta	Cambios en la versión 5.11.2
    perl5111delta	Cambios en la versión 5.11.1
    perl5110delta	Cambios en la versión 5.11.0
    perl5101delta	Cambios en la versión 5.10.1
    perl5100delta	Cambios en la versión 5.10.0
    perl595delta	Cambios en la versión 5.9.5
    perl594delta	Cambios en la versión 5.9.4
    perl593delta	Cambios en la versión 5.9.3
    perl592delta	Cambios en la versión 5.9.2
    perl591delta	Cambios en la versión 5.9.1
    perl590delta	Cambios en la versión 5.9.0
    perl589delta	Cambios en la versión 5.8.9
    perl588delta	Cambios en la versión 5.8.8
    perl587delta	Cambios en la versión 5.8.7
    perl586delta	Cambios en la versión 5.8.6
    perl585delta	Cambios en la versión 5.8.5
    perl584delta	Cambios en la versión 5.8.4
    perl583delta	Cambios en la versión 5.8.3
    perl582delta	Cambios en la versión 5.8.2
    perl581delta	Cambios en la versión 5.8.1
    perl58delta 	Cambios en la versión 5.8.0
    perl573delta	Cambios en la versión 5.7.3
    perl572delta	Cambios en la versión 5.7.2
    perl571delta	Cambios en la versión 5.7.1
    perl570delta	Cambios en la versión 5.7.0
    perl561delta	Cambios en la versión 5.6.1
    perl56delta 	Cambios en la versión 5.6
    perl5005delta	Cambios en la versión 5.005
    perl5004delta	Cambios en la versión 5.004

    perlartistic	Licencia Artística Perl
    perlgpl		Licencia Pública General GNU

=head2 Idiomas específicos

    perlcn		Perl para Chino simplificado (en EUC-CN)
    perljp		Perl para Japones (en EUC-JP)
    perlko		Perl para Coreano (en EUC-KR)
    perltw		Perl para Chino tradicional (en Big5)

=head2 Plataformas específicas

    perlaix		Notas para AIX
    perlamiga		Notas para AmigaOS
    perlapollo		Notas para Apollo DomainOS
    perlbeos		Notas para BeOS
    perlbs2000		Notas para POSIX-BC BS2000
    perlce		Notas para WinCE
    perlcygwin		Notas para Cygwin
    perldgux		Notas para DG/UX
    perldos		Notas para DOS
    perlepoc		Notas para EPOC
    perlfreebsd 	Notas para FreeBSD
    perlhaiku		Notas para Haiku
    perlhpux		Notas para HP-UX
    perlhurd		Notas para Hurd
    perlirix		Notas para Irix
    perllinux		Notas para Linux
    perlmacos		Notas para Mac OS (Classic)
    perlmacosx		Notas para Mac OS X
    perlmpeix		Notas para MPE/iX
    perlnetware 	Notas para NetWare
    perlopenbsd 	Notas para OpenBSD
    perlos2		Notas para OS/2
    perlos390		Notas para OS/390
    perlos400		Notas para OS/400
    perlplan9		Notas para Plan 9
    perlqnx		Notas para QNX
    perlriscos		Notas para RISC OS
    perlsolaris 	Notas para Solaris
    perlsymbian 	Notas para for Symbian
    perltru64		Notas para Tru64
    perluts		Notas para UTS
    perlvmesa		Notas para VM/ESA
    perlvms		Notas para VMS
    perlvos		Notas para Stratus VOS
    perlwin32		Notas para Windows


En un sistema de la familia Unix, esta documentación estará también, por lo general, disponible como páginas de manual para su uso con el programa F<man>.

En general, si ha ocurrido algo extraño en su programa y no está seguro de dónde debe buscar ayuda, intente primero usar la opción B<-w>.  A menudo, mostrará dónde está el problema.

=head1 DESCRIPCIÓN

Perl, oficialmente, significa Lenguaje práctico para la extracción e informe (I<Practical Extraction and Report Language>), excepto cuando no hace eso.

Perl es un lenguaje optimizado para el escaneo de archivos de texto, extraer información de estos archivos de texto, e impresión de informes basados en esa información.  Es también un buen lenguaje para muchas tareas de gestión de sistemas.  El lenguaje está pensado para ser práctico (fácil de usar, eficiente, completo) en lugar de hermoso (pequeño, elegante, mínimo).

Perl combina (en opinión del autor, de todos modos), algunas de las mejores características de B<C>, B<sed>, B<awk>, y B<sh>, así que la gente que conozca estos lenguajes no deberían tener dificultades con él.  (Historiadores del lenguaje notarán algunos vestigios de B<csh>, Pascal, e incluso BASIC-PLUS). La sintaxis de las expresiones corresponden estrechamente con la sintaxis de las expresiones del C.  A diferencia de la mayoría de los sistemas Unix, Perl no limita arbitrariamente el tamaño de sus datos - si tiene memoria, Perl puede sorber su archivo entero como una sola cadena.  La recursividad es de profundidad ilimitada.  Y las tablas utilizadas por los hashes (a veces llamadas "matrices asociativas") crecen lo que sea necesario para evitar que el rendimiento se degrade.  Perl puede utilizar sofisticadas técnicas de concordancia de patrones para escanear grandes cantidades de datos, rápidamente.  Si bien optimizados para el escaneo de texto, Perl también puede tratar con datos binarios, y puede hacer que los archivos dbm parezcan hashes.  Scripts setuid de Perl son más seguros que los programas en C a través de un mecanismo de seguimiento de flujo de datos que impide muchos agujeros de seguridad estúpidos.

Si tiene un problema en que normalmente utilizaría B<sed> o B<awk> o B<sh>, pero excede sus capacidades o debe funcionar un poco más rápido, y usted no desea escribir esa tontería en C, Perl puede ser para usted.  También hay traductores para convertir sus scripts B<sed> y B<awk> en scripts Perl.

Pero espere, aún hay más...

Iniciado en 1993 (véase L<perlhist>), la versión de Perl 5 es casi una reescritura completa que proporciona los beneficios adicionales siguientes:

=over 4

=item *

la modularidad y la reutilización usando innumerables módulos 

Descrito en L<perlmod>, L<perlmodlib> y L<perlmodinstall>.

=item *

integrable y ampliable 

Descrito en L<perlembed>, L<perlxstut>, L<perlxs>, L<perlcall>, L<perlguts> y L<xsubpp>.

=item *

sus propias variables mágicas (incluyendo múltiples implementaciones simultáneas de DBM)

Descrito en L<perltie> y L<AnyDBM_File>.

=item *

subrutinas ahora pueden ser reemplazadas, cargadas automáticamente y prototipadas

Descrito en L<perlsub>

=item *

estructuras de datos arbitrariamente anidadas y funciones anónimas

Descrito en L<perlreftut>, L<perlref>, L<perldsc> y L<perllol>.

=item *

programación orientada a objetos

Descrito en L<perlobj>, L<perlboot>, L<perltoot>, L<perltooc> y L<perlbot>.

=item *

apoyo a procesos ligeros (hilos)

Descrito en L<perlthrtut> y L<threads>.

=item *

soporte para Unicode, la internacionalización y localización

Descrito en L<perluniintro>, L<perllocale> y L<Locale::Maketext>.

=item *

ámbito léxico

Descrito en L<perlsub>

=item *

mejoras en expresiones regulares

Descrito en L<perlre>, con ejemplos adicionales en L<perlop>.

=item *

depurador mejorado y entorno Perl interactivo, con soporte de un editor integrado

Descrito en L<perldebtut>, L<perldebug> y L<perldebguts>.

=item *

compatible con la biblioteca POSIX 1003.1

Descrito en L<POSIX>.

=back

Bueno, esto ya es I<definitivamente> suficiente autobombo.

=head1 DISPONIBILIDAD

Perl está disponible para la mayoría de sistemas operativos, incluyendo a casi todas las plataformas Unix.  Ver L<perlport/"Plataformas soportadas"> para ver un listado.

=head1 ENTORNO

Ver L<perlrun>.

=head1 AUTOR

Larry Wall <larry@wall.org>, con ayuda de montones de otras personas.

Si sus historias de éxito y testimonio de Perl puede ser de ayuda a otros que desean abogar por el uso de Perl en sus aplicaciones, o si simplemente desea expresar su gratitud a Larry y los desarrolladores de Perl, por favor escriba a perl-thanks@perl.org .

=head1 ARCHIVOS

 "@INC"			posiciones de las bibliotecas perl

=head1 VEA TAMBIÉN

 a2p	traductor awk a perl
 s2p	traductos sed a perl

 http://www.perl.org/       página principal de Perl
 http://www.perl.com/       Artículos Perl (O'Reilly)
 http://www.cpan.org/       Archivo Completo de Perl
 http://www.pm.org/         los Perl Mongers

=head1 DIAGNÓSTICO

El pragma C<use warnings> (y la opción B<-w>) produce algunos diagnósticos encantadores.

Ver L<perldiag> para la explicación de todos los diagnósticos de Perl.  El pragma C<use diagnostics> automáticamente cambia las normalmente concisas advertencias y errores de Perl en formatos más largos.

Los errores de compilación le indicarán el número de línea del error, con indicación del siguiente símbolo que iba a ser examinado.
(En un script pasado a Perl a través de opciones B<-e>, cada B<-e> cuenta como una sola línea).

scripts setuid tienen restricciones adicionales que pueden producir mensajes de error como "dependencia insegura".  Ver L<perlsec>.

¿Mencionamos que debe considerar, definitivamente, el usar la opción B<-w>?

=head1 ERRORES

La opción B<-w> no es obligatoria.

Perl está a merced de las definiciones de su máquina en diversas operaciones, como la conversión de tipos, atof(), y salida en punto flotante con sprintf ().

Si su stdio requiere un posicionamiento, o un eof entre lecturas y escrituras en un determinado flujo, lo mismo ocurre con Perl.  (Esto no se aplica a sysread () y syswrite ()).

Aunque ninguno de los tipos integrados de datos tiene límites de tamaño (aparte del tamaño de la memoria), todavía hay unos pocos límites arbitrarios: un determinado nombre de variable no podrá ser superior a 251 caracteres.  Los números de línea mostrados por los diagnósticos se almacenan internamente como enteros cortos, por lo que se limita a un máximo de 65535 (cifras más altas quedarán afectadas por el desbordamiento).

Puede enviar sus informes de fallos (asegúrese de incluir la información de configuración completa en términos de producción por el programa myconfig en el árbol de código fuente Perl, o con C<perl -V>) a perlbug@perl.org.  Si ha tenido éxito en la compilación de perl, el script B<perlbug> en el subdirectorio F<utils/> se puede utilizar para ayudar en el envío de un correo electrónico con el informe de errores.

Perl, en realidad significa Recolector de basura patológicamente ecléctico (Pathologically Eclectic Rubbish Lister), pero no le diga a nadie que se lo he dicho.

=head1 NOTAS

El lema de Perl es "Hay más que una manera de hacerlo". Adivinar cuántas más se deja como ejercicio para el lector.

Las tres principales virtudes de un programador son pereza, impaciencia e Hibris (desmesura u orgullo exagerado en uno mismo).  Ver el Libro del Camello para ver por qué.

